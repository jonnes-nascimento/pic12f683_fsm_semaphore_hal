

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Dec 16 15:17:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F683
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.32
    18                           ; Generated 23/11/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC12F683 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001E                     	;# 
    75  001F                     	;# 
    76  0081                     	;# 
    77  0085                     	;# 
    78  008C                     	;# 
    79  008E                     	;# 
    80  008F                     	;# 
    81  0090                     	;# 
    82  0092                     	;# 
    83  0095                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0096                     	;# 
    87  0099                     	;# 
    88  009A                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009C                     	;# 
    92  009D                     	;# 
    93  009E                     	;# 
    94  009F                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  000A                     	;# 
   102  000B                     	;# 
   103  000C                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0013                     	;# 
   112  0014                     	;# 
   113  0015                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  008C                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0092                     	;# 
   126  0095                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0096                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138                           
   139                           	psect	strings
   140  0001                     __pstrings:
   141  0001                     stringtab:
   142  0001                     __stringtab:
   143  0001                     stringcode:	
   144                           ;	String table - string pointers are 1 byte each
   145                           
   146  0001                     stringdir:
   147  0001  3000               	movlw	high stringdir
   148  0002  008A               	movwf	10
   149  0003  0804               	movf	4,w
   150  0004  0A84               	incf	4,f
   151  0005  0782               	addwf	2,f
   152  0006                     __stringbase:
   153  0006  3400               	retlw	0
   154  0007                     __end_of__stringtab:
   155  0007                     _FSM:
   156  0007  3404               	retlw	4
   157  0008  34B8               	retlw	184
   158  0009  340B               	retlw	11
   159  000A  3401               	retlw	1
   160  000B  3401               	retlw	1
   161  000C  3402               	retlw	2
   162  000D  34E8               	retlw	232
   163  000E  3403               	retlw	3
   164  000F  3402               	retlw	2
   165  0010  3403               	retlw	3
   166  0011  3401               	retlw	1
   167  0012  34B8               	retlw	184
   168  0013  340B               	retlw	11
   169  0014  3400               	retlw	0
   170  0015  3401               	retlw	1
   171  0016  3400               	retlw	0
   172  0017  34E8               	retlw	232
   173  0018  3403               	retlw	3
   174  0019  3401               	retlw	1
   175  001A  3401               	retlw	1
   176  001B                     __end_of_FSM:
   177  001B                     _GpioFunction:
   178  001B  349F               	retlw	159
   179  001C  3400               	retlw	0
   180  001D                     __end_of_GpioFunction:
   181  001D                     _GpioDirection:
   182  001D  3485               	retlw	133
   183  001E  3400               	retlw	0
   184  001F                     __end_of_GpioDirection:
   185  001F                     _GpioPort:
   186  001F  3405               	retlw	5
   187  0020  3400               	retlw	0
   188  0021                     __end_of_GpioPort:
   189  0021                     _SystemADConverters:
   190  0021  341F               	retlw	31
   191  0022  3400               	retlw	0
   192  0023                     __end_of_SystemADConverters:
   193  0023                     _SystemComparator:
   194  0023  3419               	retlw	25
   195  0024  3400               	retlw	0
   196  0025                     __end_of_SystemComparator:
   197  0025                     _SystemOscilator:
   198  0025  348F               	retlw	143
   199  0026  3400               	retlw	0
   200  0027                     __end_of_SystemOscilator:
   201  0027                     _ANSEL:
   202  0027  349F               	retlw	159
   203  0028  3400               	retlw	0
   204  0029                     __end_of_ANSEL:
   205  0029                     _OSCCON:
   206  0029  348F               	retlw	143
   207  002A  3400               	retlw	0
   208  002B                     __end_of_OSCCON:
   209  002B                     _TRISIO:
   210  002B  3485               	retlw	133
   211  002C  3400               	retlw	0
   212  002D                     __end_of_TRISIO:
   213  002D                     _ADCON0:
   214  002D  341F               	retlw	31
   215  002E  3400               	retlw	0
   216  002F                     __end_of_ADCON0:
   217  002F                     _CMCON0:
   218  002F  3419               	retlw	25
   219  0030  3400               	retlw	0
   220  0031                     __end_of_CMCON0:
   221  0031                     _GPIO:
   222  0031  3405               	retlw	5
   223  0032  3400               	retlw	0
   224  0033                     __end_of_GPIO:
   225  0033                     _GpioConfig:
   226  0033  3400               	retlw	0
   227  0034  3400               	retlw	0
   228  0035  3400               	retlw	0
   229  0036  3400               	retlw	0
   230  0037  3401               	retlw	1
   231  0038  3401               	retlw	1
   232  0039  3400               	retlw	0
   233  003A  3401               	retlw	1
   234  003B  3400               	retlw	0
   235  003C  3400               	retlw	0
   236  003D  3402               	retlw	2
   237  003E  3400               	retlw	0
   238  003F  3400               	retlw	0
   239  0040  3400               	retlw	0
   240  0041  3401               	retlw	1
   241  0042  3403               	retlw	3
   242  0043  3400               	retlw	0
   243  0044  3401               	retlw	1
   244  0045  3400               	retlw	0
   245  0046  3400               	retlw	0
   246  0047  3404               	retlw	4
   247  0048  3400               	retlw	0
   248  0049  3400               	retlw	0
   249  004A  3400               	retlw	0
   250  004B  3401               	retlw	1
   251  004C  3405               	retlw	5
   252  004D  3400               	retlw	0
   253  004E  3400               	retlw	0
   254  004F  3400               	retlw	0
   255  0050  3401               	retlw	1
   256  0051                     __end_of_GpioConfig:
   257  002B                     _GP3	set	43
   258                           
   259                           	psect	cinit
   260  07FE                     start_initialization:	
   261                           ; #config settings
   262                           
   263  07FE                     __initialization:
   264  07FE                     end_of_initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  07FE                     __end_of__initialization:
   268  07FE  0183               	clrf	3
   269  07FF  2EF2               	ljmp	_main	;jump to C main() function
   270                           
   271                           	psect	cstackCOMMON
   272  0070                     __pcstackCOMMON:
   273  0070                     ?_GpioConfigGet:
   274  0070                     ??_GpioConfigGet:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_Gpio_Init:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_Gpio_Write_Byte:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ??_Gpio_Write_Byte:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?___bmul:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ___bmul@multiplicand:	
   293                           ; 1 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0070                     	ds	1
   298  0071                     ??___bmul:
   299                           
   300                           ; 1 bytes @ 0x1
   301  0071                     	ds	1
   302  0072                     ___bmul@product:
   303                           
   304                           ; 1 bytes @ 0x2
   305  0072                     	ds	1
   306  0073                     Gpio_Write_Byte@byte:
   307  0073                     ___bmul@multiplier:	
   308                           ; 1 bytes @ 0x3
   309                           
   310                           
   311                           ; 1 bytes @ 0x3
   312  0073                     	ds	1
   313  0074                     ??_Gpio_Init:
   314  0074                     ?_delay_ms:	
   315                           ; 1 bytes @ 0x4
   316                           
   317  0074                     delay_ms@tempo:	
   318                           ; 1 bytes @ 0x4
   319                           
   320                           
   321                           ; 2 bytes @ 0x4
   322  0074                     	ds	2
   323  0076                     ??_delay_ms:
   324                           
   325                           ; 1 bytes @ 0x6
   326  0076                     	ds	4
   327  007A                     Gpio_Init@Config:
   328                           
   329                           ; 1 bytes @ 0xA
   330  007A                     	ds	1
   331  007B                     Gpio_Init@port:
   332                           
   333                           ; 1 bytes @ 0xB
   334  007B                     	ds	1
   335  007C                     Gpio_Init@i:
   336                           
   337                           ; 1 bytes @ 0xC
   338  007C                     	ds	1
   339                           
   340                           	psect	cstackBANK0
   341  0020                     __pcstackBANK0:
   342  0020                     ??_main:
   343                           
   344                           ; 1 bytes @ 0x0
   345  0020                     	ds	3
   346  0023                     main@config:
   347                           
   348                           ; 1 bytes @ 0x3
   349  0023                     	ds	1
   350  0024                     main@estado:
   351                           
   352                           ; 1 bytes @ 0x4
   353  0024                     	ds	1
   354                           
   355                           	psect	maintext
   356  06F2                     __pmaintext:	
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 87 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  estado          1    4[BANK0 ] unsigned char 
   367 ;;  config          1    3[BANK0 ] PTR const struct .
   368 ;;		 -> GpioConfig(30), 
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : B00/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1
   378 ;;      Params:         0       0       0
   379 ;;      Locals:         0       2       0
   380 ;;      Temps:          0       3       0
   381 ;;      Totals:         0       5       0
   382 ;;Total ram usage:        5 bytes
   383 ;; Hardware stack levels required when called: 2
   384 ;; This function calls:
   385 ;;		_GpioConfigGet
   386 ;;		_Gpio_Init
   387 ;;		_Gpio_Write_Byte
   388 ;;		___bmul
   389 ;;		_delay_ms
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           
   396                           ;psect for function _main
   397  06F2                     _main:
   398  06F2                     l793:	
   399                           ;incstack = 0
   400                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   401                           
   402                           
   403                           ;main.c: 89:     const GpioConfig_t * config = GpioConfigGet();
   404  06F2  26B3               	fcall	_GpioConfigGet
   405  06F3  1283               	bcf	3,5	;RP0=0, select bank0
   406  06F4  00A0               	movwf	??_main
   407  06F5  0820               	movf	??_main,w
   408  06F6  00A3               	movwf	main@config
   409  06F7                     l795:
   410                           
   411                           ;main.c: 90:     Gpio_Init(config);
   412  06F7  0823               	movf	main@config,w
   413  06F8  272B               	fcall	_Gpio_Init
   414  06F9                     l797:
   415                           
   416                           ;main.c: 92:     uint8_t estado = 0;
   417  06F9  1283               	bcf	3,5	;RP0=0, select bank0
   418  06FA  01A4               	clrf	main@estado
   419  06FB                     l799:
   420                           
   421                           ;main.c: 95:     {;main.c: 96:         Gpio_Write_Byte(FSM[estado].saida);
   422  06FB  3005               	movlw	5
   423  06FC  00A0               	movwf	??_main
   424  06FD  0820               	movf	??_main,w
   425  06FE  00F0               	movwf	___bmul@multiplicand
   426  06FF  0824               	movf	main@estado,w
   427  0700  26C6               	fcall	___bmul
   428  0701  3E01               	addlw	low ((_FSM-__stringbase)| (0+32768))
   429  0702  0084               	movwf	4
   430  0703  2001               	fcall	stringdir
   431  0704  26B5               	fcall	_Gpio_Write_Byte
   432  0705                     l801:
   433                           
   434                           ;main.c: 98:         delay_ms(FSM[estado].tempo);
   435  0705  3005               	movlw	5
   436  0706  1283               	bcf	3,5	;RP0=0, select bank0
   437  0707  00A0               	movwf	??_main
   438  0708  0820               	movf	??_main,w
   439  0709  00F0               	movwf	___bmul@multiplicand
   440  070A  0824               	movf	main@estado,w
   441  070B  26C6               	fcall	___bmul
   442  070C  3E02               	addlw	low (((_FSM-__stringbase)| (0+32768)+1))
   443  070D  0084               	movwf	4
   444  070E  2001               	fcall	stringdir
   445  070F  00F4               	movwf	delay_ms@tempo
   446  0710  2001               	fcall	stringdir
   447  0711  00F5               	movwf	delay_ms@tempo+1
   448  0712  26DB               	fcall	_delay_ms
   449  0713                     l803:
   450                           
   451                           ;main.c: 100:         estado = FSM[estado].prox_estado[!GP3];
   452  0713  1003               	clrc
   453  0714  1283               	bcf	3,5	;RP0=0, select bank0
   454  0715  1D85               	btfss	5,3	;volatile
   455  0716  1403               	setc
   456  0717  3000               	movlw	0
   457  0718  1803               	skipnc
   458  0719  3001               	movlw	1
   459  071A  00A0               	movwf	??_main
   460  071B  3005               	movlw	5
   461  071C  00A1               	movwf	??_main+1
   462  071D  0821               	movf	??_main+1,w
   463  071E  00F0               	movwf	___bmul@multiplicand
   464  071F  0824               	movf	main@estado,w
   465  0720  26C6               	fcall	___bmul
   466  0721  3E04               	addlw	low (((_FSM-__stringbase)| (0+32768)+3))
   467  0722  1283               	bcf	3,5	;RP0=0, select bank0
   468  0723  0720               	addwf	??_main,w
   469  0724  0084               	movwf	4
   470  0725  2001               	fcall	stringdir
   471  0726  00A2               	movwf	??_main+2
   472  0727  0822               	movf	??_main+2,w
   473  0728  00A4               	movwf	main@estado
   474  0729  2EFB               	goto	l799
   475  072A  2800               	ljmp	start
   476  072B                     __end_of_main:
   477                           
   478                           	psect	text1
   479  06DB                     __ptext1:	
   480 ;; *************** function _delay_ms *****************
   481 ;; Defined at:
   482 ;;		line 108 in file "main.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;  tempo           2    4[COMMON] unsigned int 
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, status,2, status,0
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMMON   BANK0   BANK1
   496 ;;      Params:         2       0       0
   497 ;;      Locals:         0       0       0
   498 ;;      Temps:          2       0       0
   499 ;;      Totals:         4       0       0
   500 ;;Total ram usage:        4 bytes
   501 ;; Hardware stack levels used: 1
   502 ;; This function calls:
   503 ;;		Nothing
   504 ;; This function is called by:
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           
   510                           ;psect for function _delay_ms
   511  06DB                     _delay_ms:
   512  06DB                     l787:	
   513                           ;incstack = 0
   514                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
   515                           
   516                           
   517                           ;main.c: 108: void delay_ms(uint16_t tempo);main.c: 109: {;main.c: 110:     while (tempo
      +                           > 0)
   518  06DB  2EEB               	goto	l791
   519  06DC                     l789:
   520                           
   521                           ;main.c: 111:     {;main.c: 112:         _delay((unsigned long)((1)*(8000000/4000.0)));
   522  06DC  3003               	movlw	3
   523  06DD  00F7               	movwf	??_delay_ms+1
   524  06DE  3097               	movlw	151
   525  06DF  00F6               	movwf	??_delay_ms
   526  06E0                     u237:
   527  06E0  0BF6               	decfsz	??_delay_ms,f
   528  06E1  2EE0               	goto	u237
   529  06E2  0BF7               	decfsz	??_delay_ms+1,f
   530  06E3  2EE0               	goto	u237
   531  06E4  2EE5               	nop2
   532                           
   533                           ;main.c: 113:         tempo--;
   534  06E5  3001               	movlw	1
   535  06E6  02F4               	subwf	delay_ms@tempo,f
   536  06E7  3000               	movlw	0
   537  06E8  1C03               	skipc
   538  06E9  03F5               	decf	delay_ms@tempo+1,f
   539  06EA  02F5               	subwf	delay_ms@tempo+1,f
   540  06EB                     l791:
   541                           
   542                           ;main.c: 110:     while (tempo > 0)
   543  06EB  0874               	movf	delay_ms@tempo,w
   544  06EC  0475               	iorwf	delay_ms@tempo+1,w
   545  06ED  1D03               	btfss	3,2
   546  06EE  2EF0               	goto	u221
   547  06EF  2EF1               	goto	u220
   548  06F0                     u221:
   549  06F0  2EDC               	goto	l789
   550  06F1                     u220:
   551  06F1                     l28:
   552  06F1  0008               	return
   553  06F2                     __end_of_delay_ms:
   554                           
   555                           	psect	text2
   556  06B5                     __ptext2:	
   557 ;; *************** function _Gpio_Write_Byte *****************
   558 ;; Defined at:
   559 ;;		line 72 in file "./pic12f683.h"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  byte            1    wreg     unsigned char 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  byte            1    3[COMMON] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1
   573 ;;      Params:         0       0       0
   574 ;;      Locals:         1       0       0
   575 ;;      Temps:          3       0       0
   576 ;;      Totals:         4       0       0
   577 ;;Total ram usage:        4 bytes
   578 ;; Hardware stack levels used: 2
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           
   587                           ;psect for function _Gpio_Write_Byte
   588  06B5                     _Gpio_Write_Byte:
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _Gpio_Write_Byte: [wreg-fsr0h+btemp+1+pclath]
   592                           ;Gpio_Write_Byte@byte stored from wreg
   593  06B5  00F3               	movwf	Gpio_Write_Byte@byte
   594  06B6                     l785:
   595                           
   596                           ;gpio.c: 72: void Gpio_Write_Byte(uint8_t byte);gpio.c: 73: {;gpio.c: 74:     *GpioPort[
      +                          0] = byte;
   597  06B6  0873               	movf	Gpio_Write_Byte@byte,w
   598  06B7  00F0               	movwf	??_Gpio_Write_Byte
   599  06B8  3019               	movlw	low (_GpioPort-__stringbase)
   600  06B9  0084               	movwf	4
   601  06BA  2001               	fcall	stringdir
   602  06BB  00F1               	movwf	??_Gpio_Write_Byte+1
   603  06BC  2001               	fcall	stringdir
   604  06BD  00F2               	movwf	??_Gpio_Write_Byte+2
   605  06BE  0871               	movf	??_Gpio_Write_Byte+1,w
   606  06BF  0084               	movwf	4
   607  06C0  1783               	bsf	3,7
   608  06C1  1C72               	btfss	??_Gpio_Write_Byte+2,0
   609  06C2  1383               	bcf	3,7
   610  06C3  0870               	movf	??_Gpio_Write_Byte,w
   611  06C4  0080               	movwf	0
   612  06C5                     l64:
   613  06C5  0008               	return
   614  06C6                     __end_of_Gpio_Write_Byte:
   615                           
   616                           	psect	text3
   617  072B                     __ptext3:	
   618 ;; *************** function _Gpio_Init *****************
   619 ;; Defined at:
   620 ;;		line 42 in file "./pic12f683.h"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  Config          1    wreg     const PTR const struct .
   623 ;;		 -> GpioConfig(30), 
   624 ;; Auto vars:     Size  Location     Type
   625 ;;  Config          1   10[COMMON] const PTR const struct .
   626 ;;		 -> GpioConfig(30), 
   627 ;;  i               1   12[COMMON] unsigned char 
   628 ;;  port            1   11[COMMON] unsigned char 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMMON   BANK0   BANK1
   638 ;;      Params:         0       0       0
   639 ;;      Locals:         3       0       0
   640 ;;      Temps:          6       0       0
   641 ;;      Totals:         9       0       0
   642 ;;Total ram usage:        9 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; Hardware stack levels required when called: 1
   645 ;; This function calls:
   646 ;;		___bmul
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _Gpio_Init
   654  072B                     _Gpio_Init:
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _Gpio_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   658                           ;Gpio_Init@Config stored from wreg
   659  072B  00FA               	movwf	Gpio_Init@Config
   660  072C                     l751:
   661                           
   662                           ;gpio.c: 42: void Gpio_Init(const GpioConfig_t * const Config);gpio.c: 43: {;gpio.c: 45:
      +                               *SystemOscilator = 0x70;
   663  072C  3070               	movlw	112
   664  072D  1683               	bsf	3,5	;RP0=1, select bank1
   665  072E  008F               	movwf	15	;volatile
   666                           
   667                           ;gpio.c: 46:     *SystemComparator = 0x07;
   668  072F  3007               	movlw	7
   669  0730  1283               	bcf	3,5	;RP0=0, select bank0
   670  0731  0099               	movwf	25	;volatile
   671  0732                     l753:
   672                           
   673                           ;gpio.c: 47:     *SystemADConverters = 0x00;
   674  0732  019F               	clrf	31	;volatile
   675  0733                     l755:
   676                           
   677                           ;gpio.c: 49:     for (uint8_t port = 0; port < 1u; port++)
   678  0733  01FB               	clrf	Gpio_Init@port
   679  0734                     l761:
   680                           
   681                           ;gpio.c: 50:     {;gpio.c: 51:         *GpioPort[port] = 0x00;
   682  0734  087B               	movf	Gpio_Init@port,w
   683  0735  00F4               	movwf	??_Gpio_Init
   684  0736  0774               	addwf	??_Gpio_Init,w
   685  0737  3E19               	addlw	low ((_GpioPort-__stringbase)| (0+32768))
   686  0738  0084               	movwf	4
   687  0739  2001               	fcall	stringdir
   688  073A  00F5               	movwf	??_Gpio_Init+1
   689  073B  2001               	fcall	stringdir
   690  073C  00F6               	movwf	??_Gpio_Init+2
   691  073D  0875               	movf	??_Gpio_Init+1,w
   692  073E  0084               	movwf	4
   693  073F  1783               	bsf	3,7
   694  0740  1C76               	btfss	??_Gpio_Init+2,0
   695  0741  1383               	bcf	3,7
   696  0742  0180               	clrf	0
   697  0743                     l763:
   698                           
   699                           ;gpio.c: 54:         for (uint8_t i = 0; i < GPIO_MAX_PIN_NUMBER; i++)
   700  0743  01FC               	clrf	Gpio_Init@i
   701  0744                     l769:
   702                           
   703                           ;gpio.c: 55:         {;gpio.c: 56:            *GpioDirection[port] = (unsigned char) (Co
      +                          nfig[i].Direction << i);
   704  0744  3005               	movlw	5
   705  0745  00F4               	movwf	??_Gpio_Init
   706  0746  0874               	movf	??_Gpio_Init,w
   707  0747  00F0               	movwf	___bmul@multiplicand
   708  0748  087C               	movf	Gpio_Init@i,w
   709  0749  26C6               	fcall	___bmul
   710  074A  077A               	addwf	Gpio_Init@Config,w
   711  074B  3E02               	addlw	2
   712  074C  0084               	movwf	4
   713  074D  2001               	fcall	stringdir
   714  074E  00F5               	movwf	??_Gpio_Init+1
   715  074F  0A7C               	incf	Gpio_Init@i,w
   716  0750  2F53               	goto	u144
   717  0751                     u145:
   718  0751  1003               	clrc
   719  0752  0DF5               	rlf	??_Gpio_Init+1,f
   720  0753                     u144:
   721  0753  3EFF               	addlw	-1
   722  0754  1D03               	skipz
   723  0755  2F51               	goto	u145
   724  0756  0875               	movf	??_Gpio_Init+1,w
   725  0757  00F6               	movwf	??_Gpio_Init+2
   726  0758  087B               	movf	Gpio_Init@port,w
   727  0759  00F7               	movwf	??_Gpio_Init+3
   728  075A  0777               	addwf	??_Gpio_Init+3,w
   729  075B  3E17               	addlw	low ((_GpioDirection-__stringbase)| (0+32768))
   730  075C  0084               	movwf	4
   731  075D  2001               	fcall	stringdir
   732  075E  00F8               	movwf	??_Gpio_Init+4
   733  075F  2001               	fcall	stringdir
   734  0760  00F9               	movwf	??_Gpio_Init+5
   735  0761  0878               	movf	??_Gpio_Init+4,w
   736  0762  0084               	movwf	4
   737  0763  1783               	bsf	3,7
   738  0764  1C79               	btfss	??_Gpio_Init+5,0
   739  0765  1383               	bcf	3,7
   740  0766  0876               	movf	??_Gpio_Init+2,w
   741  0767  0080               	movwf	0
   742                           
   743                           ;gpio.c: 58:            *GpioPort[port] = (unsigned char) (Config[i].State << i);
   744  0768  3005               	movlw	5
   745  0769  00F4               	movwf	??_Gpio_Init
   746  076A  0874               	movf	??_Gpio_Init,w
   747  076B  00F0               	movwf	___bmul@multiplicand
   748  076C  087C               	movf	Gpio_Init@i,w
   749  076D  26C6               	fcall	___bmul
   750  076E  077A               	addwf	Gpio_Init@Config,w
   751  076F  3E04               	addlw	4
   752  0770  0084               	movwf	4
   753  0771  2001               	fcall	stringdir
   754  0772  00F5               	movwf	??_Gpio_Init+1
   755  0773  0A7C               	incf	Gpio_Init@i,w
   756  0774  2F77               	goto	u154
   757  0775                     u155:
   758  0775  1003               	clrc
   759  0776  0DF5               	rlf	??_Gpio_Init+1,f
   760  0777                     u154:
   761  0777  3EFF               	addlw	-1
   762  0778  1D03               	skipz
   763  0779  2F75               	goto	u155
   764  077A  0875               	movf	??_Gpio_Init+1,w
   765  077B  00F6               	movwf	??_Gpio_Init+2
   766  077C  087B               	movf	Gpio_Init@port,w
   767  077D  00F7               	movwf	??_Gpio_Init+3
   768  077E  0777               	addwf	??_Gpio_Init+3,w
   769  077F  3E19               	addlw	low ((_GpioPort-__stringbase)| (0+32768))
   770  0780  0084               	movwf	4
   771  0781  2001               	fcall	stringdir
   772  0782  00F8               	movwf	??_Gpio_Init+4
   773  0783  2001               	fcall	stringdir
   774  0784  00F9               	movwf	??_Gpio_Init+5
   775  0785  0878               	movf	??_Gpio_Init+4,w
   776  0786  0084               	movwf	4
   777  0787  1783               	bsf	3,7
   778  0788  1C79               	btfss	??_Gpio_Init+5,0
   779  0789  1383               	bcf	3,7
   780  078A  0876               	movf	??_Gpio_Init+2,w
   781  078B  0080               	movwf	0
   782  078C                     l771:
   783                           
   784                           ;gpio.c: 60:            if (Config[i].Function == GPIO_PIN_FUNCTION_ANALOG && Config[i].
      +                          Direction == GPIO_PIN_DIRECTION_INPUT)
   785  078C  3005               	movlw	5
   786  078D  00F4               	movwf	??_Gpio_Init
   787  078E  0874               	movf	??_Gpio_Init,w
   788  078F  00F0               	movwf	___bmul@multiplicand
   789  0790  087C               	movf	Gpio_Init@i,w
   790  0791  26C6               	fcall	___bmul
   791  0792  077A               	addwf	Gpio_Init@Config,w
   792  0793  3E01               	addlw	1
   793  0794  0084               	movwf	4
   794  0795  2001               	fcall	stringdir
   795  0796  3A01               	xorlw	1
   796  0797  1D03               	skipz
   797  0798  2F9A               	goto	u161
   798  0799  2F9B               	goto	u160
   799  079A                     u161:
   800  079A  2FCF               	goto	l777
   801  079B                     u160:
   802  079B                     l773:
   803  079B  3005               	movlw	5
   804  079C  00F4               	movwf	??_Gpio_Init
   805  079D  0874               	movf	??_Gpio_Init,w
   806  079E  00F0               	movwf	___bmul@multiplicand
   807  079F  087C               	movf	Gpio_Init@i,w
   808  07A0  26C6               	fcall	___bmul
   809  07A1  077A               	addwf	Gpio_Init@Config,w
   810  07A2  3E02               	addlw	2
   811  07A3  0084               	movwf	4
   812  07A4  2001               	fcall	stringdir
   813  07A5  3A01               	xorlw	1
   814  07A6  1D03               	skipz
   815  07A7  2FA9               	goto	u171
   816  07A8  2FAA               	goto	u170
   817  07A9                     u171:
   818  07A9  2FCF               	goto	l777
   819  07AA                     u170:
   820  07AA                     l775:
   821                           
   822                           ;gpio.c: 61:            {;gpio.c: 62:                *GpioFunction[port] = (unsigned cha
      +                          r) (Config[i].Direction << i);
   823  07AA  3005               	movlw	5
   824  07AB  00F4               	movwf	??_Gpio_Init
   825  07AC  0874               	movf	??_Gpio_Init,w
   826  07AD  00F0               	movwf	___bmul@multiplicand
   827  07AE  087C               	movf	Gpio_Init@i,w
   828  07AF  26C6               	fcall	___bmul
   829  07B0  077A               	addwf	Gpio_Init@Config,w
   830  07B1  3E02               	addlw	2
   831  07B2  0084               	movwf	4
   832  07B3  2001               	fcall	stringdir
   833  07B4  00F5               	movwf	??_Gpio_Init+1
   834  07B5  0A7C               	incf	Gpio_Init@i,w
   835  07B6  2FB9               	goto	u184
   836  07B7                     u185:
   837  07B7  1003               	clrc
   838  07B8  0DF5               	rlf	??_Gpio_Init+1,f
   839  07B9                     u184:
   840  07B9  3EFF               	addlw	-1
   841  07BA  1D03               	skipz
   842  07BB  2FB7               	goto	u185
   843  07BC  0875               	movf	??_Gpio_Init+1,w
   844  07BD  00F6               	movwf	??_Gpio_Init+2
   845  07BE  087B               	movf	Gpio_Init@port,w
   846  07BF  00F7               	movwf	??_Gpio_Init+3
   847  07C0  0777               	addwf	??_Gpio_Init+3,w
   848  07C1  3E15               	addlw	low ((_GpioFunction-__stringbase)| (0+32768))
   849  07C2  0084               	movwf	4
   850  07C3  2001               	fcall	stringdir
   851  07C4  00F8               	movwf	??_Gpio_Init+4
   852  07C5  2001               	fcall	stringdir
   853  07C6  00F9               	movwf	??_Gpio_Init+5
   854  07C7  0878               	movf	??_Gpio_Init+4,w
   855  07C8  0084               	movwf	4
   856  07C9  1783               	bsf	3,7
   857  07CA  1C79               	btfss	??_Gpio_Init+5,0
   858  07CB  1383               	bcf	3,7
   859  07CC  0876               	movf	??_Gpio_Init+2,w
   860  07CD  0080               	movwf	0
   861                           
   862                           ;gpio.c: 63:            }
   863  07CE  2FEA               	goto	l779
   864  07CF                     l777:
   865                           
   866                           ;gpio.c: 65:            {;gpio.c: 66:                *GpioFunction[port] |= (unsigned ch
      +                          ar) (0 << i);
   867  07CF  3000               	movlw	0
   868  07D0  00F4               	movwf	??_Gpio_Init
   869  07D1  0A7C               	incf	Gpio_Init@i,w
   870  07D2  2FD5               	goto	u194
   871  07D3                     u195:
   872  07D3  1003               	clrc
   873  07D4  0DF4               	rlf	??_Gpio_Init,f
   874  07D5                     u194:
   875  07D5  3EFF               	addlw	-1
   876  07D6  1D03               	skipz
   877  07D7  2FD3               	goto	u195
   878  07D8  0874               	movf	??_Gpio_Init,w
   879  07D9  00F5               	movwf	??_Gpio_Init+1
   880  07DA  087B               	movf	Gpio_Init@port,w
   881  07DB  00F6               	movwf	??_Gpio_Init+2
   882  07DC  0776               	addwf	??_Gpio_Init+2,w
   883  07DD  3E15               	addlw	low ((_GpioFunction-__stringbase)| (0+32768))
   884  07DE  0084               	movwf	4
   885  07DF  2001               	fcall	stringdir
   886  07E0  00F7               	movwf	??_Gpio_Init+3
   887  07E1  2001               	fcall	stringdir
   888  07E2  00F8               	movwf	??_Gpio_Init+4
   889  07E3  0877               	movf	??_Gpio_Init+3,w
   890  07E4  0084               	movwf	4
   891  07E5  1783               	bsf	3,7
   892  07E6  1C78               	btfss	??_Gpio_Init+4,0
   893  07E7  1383               	bcf	3,7
   894  07E8  0875               	movf	??_Gpio_Init+1,w
   895  07E9  0480               	iorwf	0,f
   896  07EA                     l779:
   897                           
   898                           ;gpio.c: 68:         }
   899  07EA  3001               	movlw	1
   900  07EB  00F4               	movwf	??_Gpio_Init
   901  07EC  0874               	movf	??_Gpio_Init,w
   902  07ED  07FC               	addwf	Gpio_Init@i,f
   903  07EE                     l781:
   904  07EE  3006               	movlw	6
   905  07EF  027C               	subwf	Gpio_Init@i,w
   906  07F0  1C03               	skipc
   907  07F1  2FF3               	goto	u201
   908  07F2  2FF4               	goto	u200
   909  07F3                     u201:
   910  07F3  2F44               	goto	l769
   911  07F4                     u200:
   912  07F4                     l783:
   913                           
   914                           ;gpio.c: 69:     }
   915  07F4  3001               	movlw	1
   916  07F5  00F4               	movwf	??_Gpio_Init
   917  07F6  0874               	movf	??_Gpio_Init,w
   918  07F7  07FB               	addwf	Gpio_Init@port,f
   919  07F8  087B               	movf	Gpio_Init@port,w
   920  07F9  1903               	btfsc	3,2
   921  07FA  2FFC               	goto	u211
   922  07FB  2FFD               	goto	u210
   923  07FC                     u211:
   924  07FC  2F34               	goto	l761
   925  07FD                     u210:
   926  07FD                     l61:
   927  07FD  0008               	return
   928  07FE                     __end_of_Gpio_Init:
   929                           
   930                           	psect	text4
   931  06C6                     __ptext4:	
   932 ;; *************** function ___bmul *****************
   933 ;; Defined at:
   934 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  multiplier      1    wreg     unsigned char 
   937 ;;  multiplicand    1    0[COMMON] unsigned char 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  multiplier      1    3[COMMON] unsigned char 
   940 ;;  product         1    2[COMMON] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      unsigned char 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1
   950 ;;      Params:         1       0       0
   951 ;;      Locals:         2       0       0
   952 ;;      Temps:          1       0       0
   953 ;;      Totals:         4       0       0
   954 ;;Total ram usage:        4 bytes
   955 ;; Hardware stack levels used: 1
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_main
   960 ;;		_Gpio_Init
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function ___bmul
   966  06C6                     ___bmul:
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in ___bmul: [wreg+status,2+status,0]
   970                           ;___bmul@multiplier stored from wreg
   971  06C6  00F3               	movwf	___bmul@multiplier
   972  06C7                     l733:
   973  06C7  01F2               	clrf	___bmul@product
   974  06C8                     l735:
   975  06C8  1C73               	btfss	___bmul@multiplier,0
   976  06C9  2ECB               	goto	u121
   977  06CA  2ECC               	goto	u120
   978  06CB                     u121:
   979  06CB  2ED0               	goto	l739
   980  06CC                     u120:
   981  06CC                     l737:
   982  06CC  0870               	movf	___bmul@multiplicand,w
   983  06CD  00F1               	movwf	??___bmul
   984  06CE  0871               	movf	??___bmul,w
   985  06CF  07F2               	addwf	___bmul@product,f
   986  06D0                     l739:
   987  06D0  1003               	clrc
   988  06D1  0DF0               	rlf	___bmul@multiplicand,f
   989  06D2                     l741:
   990  06D2  1003               	clrc
   991  06D3  0CF3               	rrf	___bmul@multiplier,f
   992  06D4  0873               	movf	___bmul@multiplier,w
   993  06D5  1D03               	btfss	3,2
   994  06D6  2ED8               	goto	u131
   995  06D7  2ED9               	goto	u130
   996  06D8                     u131:
   997  06D8  2EC8               	goto	l735
   998  06D9                     u130:
   999  06D9                     l743:
  1000  06D9  0872               	movf	___bmul@product,w
  1001  06DA                     l181:
  1002  06DA  0008               	return
  1003  06DB                     __end_of___bmul:
  1004                           
  1005                           	psect	text5
  1006  06B3                     __ptext5:	
  1007 ;; *************** function _GpioConfigGet *****************
  1008 ;; Defined at:
  1009 ;;		line 12 in file "gpio_config.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      PTR const struct .
  1016 ;; Registers used:
  1017 ;;		wreg
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1
  1023 ;;      Params:         0       0       0
  1024 ;;      Locals:         0       0       0
  1025 ;;      Temps:          0       0       0
  1026 ;;      Totals:         0       0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function _GpioConfigGet
  1038  06B3                     _GpioConfigGet:
  1039  06B3                     l747:	
  1040                           ;incstack = 0
  1041                           ; Regs used in _GpioConfigGet: [wreg]
  1042                           
  1043                           
  1044                           ;gpio_config.c: 14:     return (const GpioConfig_t *) &GpioConfig[0];
  1045  06B3  302D               	movlw	(low ((_GpioConfig-__stringbase)| (0+32768)))& (0+255)
  1046  06B4                     l69:
  1047  06B4  0008               	return
  1048  06B5                     __end_of_GpioConfigGet:
  1049  007E                     btemp	set	126	;btemp
  1050  007E                     wtemp0	set	126
  1051                           
  1052                           	psect	config
  1053                           
  1054                           ;Config register CONFIG @ 0x2007
  1055                           ;	Oscillator Selection bits
  1056                           ;	FOSC = INTOSCCLK, INTOSC oscillator: CLKOUT function on RA4/OSC2/CLKOUT pin, I/O funct
      +                          ion on RA5/OSC1/CLKIN
  1057                           ;	Watchdog Timer Enable bit
  1058                           ;	WDTE = OFF, WDT disabled
  1059                           ;	Power-up Timer Enable bit
  1060                           ;	PWRTE = OFF, PWRT disabled
  1061                           ;	MCLR Pin Function Select bit
  1062                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  1063                           ;	Code Protection bit
  1064                           ;	CP = OFF, Program memory code protection is disabled
  1065                           ;	Data Code Protection bit
  1066                           ;	CPD = OFF, Data memory code protection is disabled
  1067                           ;	Brown Out Detect
  1068                           ;	BOREN = OFF, BOR disabled
  1069                           ;	Internal External Switchover bit
  1070                           ;	IESO = OFF, Internal External Switchover mode is disabled
  1071                           ;	Fail-Safe Clock Monitor Enabled bit
  1072                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1073  2007                     	org	8199
  1074  2007  30D5               	dw	12501

Data Sizes:
    Strings     0
    Constant    74
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      5       5
    BANK1            32      0       0

Pointer List with Targets:

    Gpio_Init@Config	const PTR const struct . size(1) Largest target is 30
		 -> GpioConfig(CODE[30]), 

    GpioFunction	const PTR volatile unsigned char [1] size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    GpioDirection	const PTR volatile unsigned char [1] size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    GpioPort	const PTR volatile unsigned char [1] size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    SystemADConverters	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    SystemComparator	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    SystemOscilator	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    ANSEL	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    OSCCON	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    TRISIO	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    ADCON0	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    CMCON0	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    GPIO	const PTR volatile unsigned char  size(2) Largest target is 256
		 -> RAM(DATA[256]), 

    sp__GpioConfigGet	PTR const struct . size(1) Largest target is 30
		 -> GpioConfig(CODE[30]), 

    main@config	PTR const struct . size(1) Largest target is 30
		 -> GpioConfig(CODE[30]), 


Critical Paths under _main in COMMON

    _main->_Gpio_Init
    _delay_ms->___bmul
    _Gpio_Init->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1625
                                              0 BANK0      5     5      0
                      _GpioConfigGet
                          _Gpio_Init
                    _Gpio_Write_Byte
                             ___bmul
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2      99
                                              4 COMMON     4     2      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _Gpio_Write_Byte                                      4     4      0      22
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Gpio_Init                                            9     9      0     978
                                              4 COMMON     9     9      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     435
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _GpioConfigGet                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GpioConfigGet
   _Gpio_Init
     ___bmul
   _Gpio_Write_Byte
   ___bmul
   _delay_ms
     ___bmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50      5       5       4        6.2%
BANK1               20      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Dec 16 15:17:43 2021

                         pc 0002              ___bmul@product 0072                          l28 06F1  
                        l61 07FD                          l64 06C5                          l69 06B4  
                        fsr 0004                         l181 06DA                         l801 0705  
                       l803 0713                         l741 06D2                         l733 06C7  
                       l743 06D9                         l735 06C8                         l751 072C  
                       l737 06CC                         l761 0734                         l753 0732  
                       l747 06B3                         l739 06D0                         l771 078C  
                       l763 0743                         l755 0733                         l781 07EE  
                       l773 079B                         l783 07F4                         l775 07AA  
                       l791 06EB                         l777 07CF                         l769 0744  
                       l785 06B6                         l793 06F2                         l779 07EA  
                       l787 06DB                         l795 06F7                         l789 06DC  
                       l797 06F9                         l799 06FB                         _GP3 002B  
                       u120 06CC                         u200 07F4                         u121 06CB  
                       u201 07F3                         u130 06D9                         u210 07FD  
                       u131 06D8                         u211 07FC                         _FSM 0007  
                       u220 06F1                         u221 06F0                         u160 079B  
                       u144 0753                         u161 079A                         u145 0751  
                       u170 07AA                         u154 0777                         u171 07A9  
                       u155 0775                         u237 06E0                         u184 07B9  
                       u185 07B7                         u194 07D5                         u195 07D3  
                Gpio_Init@i 007C                         fsr0 0004                         indf 0000  
                      _GPIO 0031                        _main 06F2                        btemp 007E  
                      start 0000           ___bmul@multiplier 0073    __end_of_SystemComparator 0025  
                     ?_main 0070                       _ANSEL 0027             ??_GpioConfigGet 0070  
                     pclath 000A     __end_of_Gpio_Write_Byte 06C6                  _GpioConfig 0033  
                     status 0003                       wtemp0 007E                __end_of_GPIO 0033  
           __initialization 07FE                __end_of_main 072B            __end_of_GpioPort 0021  
                    ??_main 0020                      _ADCON0 002D                      _CMCON0 002F  
        __size_of_Gpio_Init 00D3                      _OSCCON 0029                      _TRISIO 002B  
          __end_of_delay_ms 06F2               Gpio_Init@port 007B                      ___bmul 06C6  
       Gpio_Write_Byte@byte 0073          _SystemADConverters 0021        __end_of_GpioFunction 001D  
          ?_Gpio_Write_Byte 0070     __end_of__initialization 07FE               __end_of_ANSEL 0029  
       ___bmul@multiplicand 0070              __pcstackCOMMON 0070           __end_of_Gpio_Init 07FE  
                __pmaintext 06F2                     ?___bmul 0070                   ?_delay_ms 0074  
                __stringtab 0001             __size_of___bmul 0015                     __ptext1 06DB  
                   __ptext2 06B5                     __ptext3 072B                     __ptext4 06C6  
                   __ptext5 06B3                  ??_delay_ms 0076        end_of_initialization 07FE  
     __end_of_GpioDirection 001F       __end_of_GpioConfigGet 06B5             _SystemOscilator 0025  
              _GpioFunction 001B              __end_of_ADCON0 002F              __end_of_CMCON0 0031  
                main@config 0023              __end_of_OSCCON 002B                  main@estado 0024  
            __end_of_TRISIO 002D              __end_of___bmul 06DB               delay_ms@tempo 0074  
        __end_of_GpioConfig 0051                   _Gpio_Init 072B         start_initialization 07FE  
               __end_of_FSM 001B     __end_of_SystemOscilator 0027                    ??___bmul 0071  
  __size_of_Gpio_Write_Byte 0011                  ?_Gpio_Init 0070                   ___latbits 0000  
             __pcstackBANK0 0020           __size_of_delay_ms 0017                   __pstrings 0001  
               __stringbase 0006           ??_Gpio_Write_Byte 0070                 ??_Gpio_Init 0074  
           Gpio_Init@Config 007A                    _GpioPort 001F          __end_of__stringtab 0007  
    __size_of_GpioConfigGet 0002                    _delay_ms 06DB            _SystemComparator 0023  
             __size_of_main 0039               _GpioDirection 001D               _GpioConfigGet 06B3  
                 stringcode 0001  __end_of_SystemADConverters 0023                    stringdir 0001  
                  stringtab 0001              ?_GpioConfigGet 0070             _Gpio_Write_Byte 06B5  
